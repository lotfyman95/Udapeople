---
- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_host_key_checking: false
    ansible_stdout_callback: yaml
  
  environment:
    NODE_ENV: "{{ lookup('env', 'NODE_ENV') }}"
    VERSION: "{{ lookup('env', 'VERSION') }}"
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR') }}"
    TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
    TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
    

  pre_tasks:
  - name: wait 600 seconds for target connection to become reachable/usable.
    wait_for_connection: null
    timeout: 600
  - name: install python for Ansible.
    apt:
      name: python3
  - name: update apt list
    become: true
    apt:
      update_cache: yes
  - setup: null

  # - name: Creates backend app directory
  #   file:
  #     path: ~/backend-app
  #     state: directory
  # - name: Unarchive backend files
  #   unarchive:
  #     src: artifact.tar.gz
  #     dest: ~/backend-app
  # - name: Installing Node Dependencies
  #   shell: |
  #     cd ~/backend-app
  #     npm I
  # - name: Executing Node app with PM2
  #   shell: |
  #     cd ~/backend-app/dist
  #     pm2 stop default
  #     pm2 start main.js
  #   register: execute_node

  # # - name: print message
  # #   debug: null
  # #   msg: "{{ execute_node.stdout_lines }}"
  # - name: Configure pm2 to start as service
  #   shell: >
  #     sudo su -c "env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu
  #     --hp /home/ubuntu"
  #     pm2 save
  roles:
    - deploy