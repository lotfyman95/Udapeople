
# ---

# - name: extract artifact
#   become: yes
#   unarchive:
#     src: files/artifact.tar.gz
#     dest: .
    
# - name: start app
#   become: yes
#   shell: |
#     npm install
#     pm2 stop all
#     pm2 start npm --name "udapeople-backend" -- run start
#   environment:
#     NODE_ENV: "{{ lookup('env', 'NODE_ENV') }}"
#     VERSION: "{{ lookup('env', 'VERSION') }}"
#     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#     TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR') }}"
#     TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
#     TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
#     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
        
# - name: "Set pm2 start as service"
#   become: yes
#   shell: |
#     env PATH=$PATH:/usr/local/bin pm2 startup -u ubuntu
# - name: check pm2 status
#   become: yes
#   shell: |
#     pm2 describe "udapeople-backend"
#   register: command_output_npm
# - debug: var=command_output_npm.stdout_lines



























# ---
# - name: "Creates backend app directory"
#   file:
#     path: ~/backend-app
#     state: directory
# - name: "Unarchive backend files"
#   unarchive:
#     src: artifact.tar.gz
#     dest: ~/backend-app
# - name: "Installing Node Dependencies"
#   shell: |
#     cd ~/backend-app
#     npm i
# - name: "Executing Node app with PM2"
#   shell: |
#     cd ~/backend-app/dist
#     pm2 stop default
#     pm2 start main.js
#   register: execute_node

# - name: print message
#   debug:
#     msg: "{{ execute_node.stdout_lines }}"
    
# - name: "Configure pm2 to start as service"
#   shell: |
#     sudo su -c "env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu"
#     pm2 save
